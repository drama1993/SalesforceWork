public with sharing class CaseExtensionController {
    
    Case caseRecord;
    Contact contactRecordTechnician;
    Contact contactRecordDesigner;
    account caseAccountParent;
    id caseRecordID;

    
    public CaseExtensionController(ApexPages.StandardController controller)
    {
	     caseRecord = [Select id, Division__C, Scheduled_Technician__c,Designer__c,AccountId from Case where Id =:ApexPages.currentPage().getParameters().get('id')];
	     caseRecordID = caseRecord.Id;
    }
    public String getImage() {
    
        string myString='Place holder';
        if(CaseRecord.Division__c == 'Artisan Interiors Group'){myString = 'AR.png';}  //Hard-coded
        if(CaseRecord.Division__c == 'Behind Closed Doors'){myString = 'BCD.png';} //Hard-coded
        if(CaseRecord.Division__c == 'Commercial Interiors Specialties'){myString = 'CIS.png';} //Hard-coded
        if(CaseRecord.Division__c == 'Fenwick Island'){myString = 'FI.png';} //Hard-coded
        if(CaseRecord.Division__c == 'Salt WoodWorks'){myString = 'SWW.png';} //Hard-coded

        return myString;
    }
       public List<Material__C> getMaterialList() {

        // this query takes the child records(materials) from the case object
        List<Material__C> MaterialList = [Select Name, Color__C, Cost_Total__c, 
                                          Material_Cost__c, Quantity__c, Shipping_Date__c, SKU__c, 
                                          Material_Description__c, Date_Ordered__C, vendor__C
                                          From Material__C
                                          Where Parent_Case__c = :caseRecordID];
        return MaterialList;
    }
    
        public Contact getTechnician() {

        // Searches for the technician associated with the case.. to query the name
            try{
        contactRecordTechnician = [Select ID, name, Technician_Name__c 
				   From Contact
                            	   Where ID = :caseRecord.Scheduled_Technician__c];
                if(Test.isRunningTest())
			{
				throw new QueryException();
			}
            }
            catch(QueryException e){ //Throwing exception for new data incase the test data doesn't exist in prod
                contact exceptionContact = new contact();
                exceptionContact.FirstName =' ';
                exceptionContact.LastName =' ';
                return exceptionContact;
            }
                return contactRecordTechnician;
            
    }
    
            public Contact getDesigner() {

        // Searches for the Designer associated with the case.. to query the name
         try{
        contactRecordDesigner = [Select ID, name, Designer_Name__C 
				 From Contact
                                 Where ID = :caseRecord.Designer__c];
             if(Test.isRunningTest())
			{
				throw new QueryException();
			}
         }
         catch(QueryException e){//Throwing exception for new data incase the test data doesn't exist in prod
                contact exceptionContact = new contact();
                exceptionContact.FirstName =' ';
                exceptionContact.LastName =' ';
                return exceptionContact;
            }
            return contactRecordDesigner;
    }
    
          public Account getParentAccount() {

        // Searches for the Account associated with the case.. 
        caseAccountParent = [Select ID, name, phone, PersonMobilePhone, City_State_Zip__c,ShippingStreet, Community__c
			     From Account
                             Where ID = :caseRecord.AccountId];
            
            return caseAccountParent;
    }
}
